# This file was automatically generated by sbt-github-actions using the
# githubWorkflowGenerate task. You should add and commit this file to
# your git repository. It goes without saying that you shouldn't edit
# this file by hand! Instead, if you wish to make changes, you should
# change your sbt build configuration to revise the workflow description
# to meet your needs, then regenerate this file.

name: Continuous Integration

on:
  pull_request:
    branches: ['**']
  push:
    branches: ['**']

env:
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  build:
    name: Build and Test
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.6, 2.12.14]
        java: [adopt@1.11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v12
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Create and start Docker containers
        run: docker-compose up -d

      - name: Check formatting
        run: sbt --client '++${{ matrix.scala }}; scalafmtCheckAll; scalafmtSbtCheck'

      - name: Check that workflows are up to date
        run: sbt --client '++${{ matrix.scala }}; githubWorkflowCheck'

      - name: Build project
        run: sbt --client '++${{ matrix.scala }}; test'

      - name: Stop and remove Docker resources
        run: docker-compose down

      - name: Compress target directories
        run: tar cf targets.tar modules/collector-common/target modules/collector-lite/target modules/http4s-common/target modules/test/target modules/kernel/target modules/collector/target modules/avro-test/target modules/fs2/target modules/sttp-client3/target modules/model/target target modules/avro-exporter/target modules/sttp-common/target modules/zipkin-http-exporter/target modules/http4s-server/target modules/rate-sampling/target modules/opentelemetry-otlp-http-exporter/target modules/tail-sampling-cache-store/target modules/opentelemetry-common/target modules/stackdriver-grpc-exporter/target modules/exporter-stream/target modules/stackdriver-http-exporter/target modules/base-zio/target modules/agent/target modules/datadog-http-exporter/target modules/base/target modules/jaeger-integration-test/target modules/stackdriver-common/target modules/avro/target modules/meta/target modules/avro-kafka-exporter/target modules/base-laws/target modules/tail-sampling-redis-store/target modules/sttp-tapir/target modules/inject-zio/target modules/sttp-client/target modules/http4s-client/target modules/inject/target modules/opentelemetry-otlp-grpc-exporter/target modules/opentelemetry-jaeger-exporter/target modules/natchez/target modules/filtering/target modules/log-exporter/target modules/avro-server/target modules/tail-sampling/target modules/core/target modules/exporter-common/target modules/exporter-http/target modules/example/target modules/newrelic-http-exporter/target modules/agent-common/target modules/avro-kafka-consumer/target modules/kafka-client/target modules/jaeger-thrift-exporter/target modules/agent-kafka/target project/target

      - name: Upload target directories
        uses: actions/upload-artifact@v2
        with:
          name: target-${{ matrix.os }}-${{ matrix.scala }}-${{ matrix.java }}
          path: targets.tar

  publish:
    name: Publish Artifacts
    needs: [build]
    if: github.event_name != 'pull_request' && (github.ref == 'refs/heads/series/0.11.x') && (github.actor != 'mergify[bot]')
    strategy:
      matrix:
        os: [ubuntu-latest]
        scala: [2.13.6]
        java: [adopt@1.11]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout current branch (full)
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Setup Java and Scala
        uses: olafurpg/setup-scala@v12
        with:
          java-version: ${{ matrix.java }}

      - name: Cache sbt
        uses: actions/cache@v2
        with:
          path: |
            ~/.sbt
            ~/.ivy2/cache
            ~/.coursier/cache/v1
            ~/.cache/coursier/v1
            ~/AppData/Local/Coursier/Cache/v1
            ~/Library/Caches/Coursier/v1
          key: ${{ runner.os }}-sbt-cache-v2-${{ hashFiles('**/*.sbt') }}-${{ hashFiles('project/build.properties') }}

      - name: Download target directories (2.13.6)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-2.13.6-${{ matrix.java }}

      - name: Inflate target directories (2.13.6)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Download target directories (2.12.14)
        uses: actions/download-artifact@v2
        with:
          name: target-${{ matrix.os }}-2.12.14-${{ matrix.java }}

      - name: Inflate target directories (2.12.14)
        run: |
          tar xf targets.tar
          rm targets.tar

      - name: Import GPG key
        id: import_gpg
        uses: crazy-max/ghaction-import-gpg@v3
        with:
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.PGP_PASS }}

      - name: Publish artifacts
        env:
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
          SONATYPE_USERNAME: ${{ secrets.SONATYPE_USERNAME }}
        run: sbt --client '++${{ matrix.scala }}; ciReleaseSonatype'

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Dockerhub
        uses: docker/login-action@v1
        with:
          username: janstenpickle
          password: ${{ secrets.DOCKERHUB }}

      - name: Export RELEASE_VERSION
        run: 'echo "RELEASE_VERSION=$(sbt -Dsbt.log.noformat=true --client ''inspect actual version'' | grep "Setting: java.lang.String" | cut -d ''='' -f2 | tr -d '' '')" >> $GITHUB_ENV'

      - name: Check RELEASE_VERSION
        id: release-version-regex-check
        uses: actions-ecosystem/action-regex-match@v2
        with:
          text: ${{ env.RELEASE_VERSION }}
          regex: ^[0-9]+\.[0-9]+\.[0-9]+(-[0-9A-Za-z-]+)?$

      - name: Export IS_TAGGED_RELEASE
        run: echo "IS_TAGGED_RELEASE=$(echo ${{ steps.release-version-regex-check.outputs.match != '' }})" >> $GITHUB_ENV

      - name: Build GraalVM native image for 'agent'
        run: sbt --client '++${{ matrix.scala }}; project agent; nativeImage'

      - name: Build Docker image for 'agent'
        uses: docker/build-push-action@v2
        with:
          tags: 'janstenpickle/trace4cats-agent:${{ github.run_number }}'
          context: modules/agent/target/native-image
          push: false
          load: true
          file: modules/agent/src/main/docker/Dockerfile

      - name: Push versioned Docker image for 'agent'
        if: env.IS_TAGGED_RELEASE == 'true'
        run: |
          docker tag janstenpickle/trace4cats-agent:${{ github.run_number }} janstenpickle/trace4cats-agent:${{ env.RELEASE_VERSION }}
          docker push janstenpickle/trace4cats-agent:${{ env.RELEASE_VERSION }}

      - name: Build GraalVM native image for 'agent-kafka'
        run: sbt --client '++${{ matrix.scala }}; project agent-kafka; nativeImage'

      - name: Build Docker image for 'agent-kafka'
        uses: docker/build-push-action@v2
        with:
          tags: 'janstenpickle/trace4cats-agent-kafka:${{ github.run_number }}'
          context: modules/agent-kafka/target/native-image
          push: false
          load: true
          file: modules/agent-kafka/src/main/docker/Dockerfile

      - name: Push versioned Docker image for 'agent-kafka'
        if: env.IS_TAGGED_RELEASE == 'true'
        run: |
          docker tag janstenpickle/trace4cats-agent-kafka:${{ github.run_number }} janstenpickle/trace4cats-agent-kafka:${{ env.RELEASE_VERSION }}
          docker push janstenpickle/trace4cats-agent-kafka:${{ env.RELEASE_VERSION }}

      - name: Build GraalVM native image for 'collector-lite'
        run: sbt --client '++${{ matrix.scala }}; project collector-lite; nativeImage'

      - name: Build Docker image for 'collector-lite'
        uses: docker/build-push-action@v2
        with:
          tags: 'janstenpickle/trace4cats-collector-lite:${{ github.run_number }}'
          context: modules/collector-lite/target/native-image
          push: false
          load: true
          file: modules/collector-lite/src/main/docker/Dockerfile

      - name: Push versioned Docker image for 'collector-lite'
        if: env.IS_TAGGED_RELEASE == 'true'
        run: |
          docker tag janstenpickle/trace4cats-collector-lite:${{ github.run_number }} janstenpickle/trace4cats-collector-lite:${{ env.RELEASE_VERSION }}
          docker push janstenpickle/trace4cats-collector-lite:${{ env.RELEASE_VERSION }}

      - name: Build Docker image for 'collector'
        run: 'sbt --client ''++${{ matrix.scala }}; project collector; set ThisBuild / version := "${{ github.run_number }}"; Docker / publishLocal'''

      - name: Push versioned Docker image for 'collector'
        if: env.IS_TAGGED_RELEASE == 'true'
        run: |
          docker tag janstenpickle/trace4cats-collector:${{ github.run_number }} janstenpickle/trace4cats-collector:${{ env.RELEASE_VERSION }}
          docker push janstenpickle/trace4cats-collector:${{ env.RELEASE_VERSION }}